import React,{Component} from 'react';import {    Dimensions,    ListView,    ScrollView,    Image,    View,    StyleSheet,    Text,    Platform,    TouchableOpacity,    RefreshControl,    Animated,    Easing,    TextInput,    Alert,    KeyboardAvoidingView,} from 'react-native';import { connect } from 'react-redux';import Icon from 'react-native-vector-icons/FontAwesome';import {Toolbar,OPTION_SHOW,OPTION_NEVER,ACTION_MAP} from 'react-native-toolbar-wrapper';import TextInputWrapper from '../../encrypt/TextInputWrapper';import {getAccessToken} from "../../action/UserActions";import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'import {addCoach} from '../../action/UserActions'import ActionSheet from 'react-native-actionsheet';import DatePicker from 'react-native-datepicker';var {height, width} = Dimensions.get('window');class AddCoach extends Component{    constructor(props) {        super(props);        this.state={            coach:{name:null,genderCode:null,birthday:null,mobilePhone:null,            sportLevel:null,coachLevel:null,heightweight:null,workcity:null,graduat:null},            genderCodeButtons:['取消','男','女'],            sportLevelButtons:['取消', '无', '体育本科', '国家一级运动员', '国家二级运动员', '国家三级运动员'],            coachLevelButtons:['取消', '一星级教练', '二星级教练', '三星级教练', '四星级教练', '五星级教练'],        }    }    show(actionSheet) {        this[actionSheet].show();    }    goBack(){        const { navigator } = this.props;        if(navigator) {            navigator.pop();        }    }    //选性别类型    _handlePress1(index) {        if(index!==0){            var sexType = this.state.genderCodeButtons[index];            var sexTypeCode = index;            this.setState({coach:Object.assign(this.state.coach,{genderCode:sexType,sexTypeCode:sexTypeCode})});        }    }    //选教练资质类型    _handlePress3(index) {        if(index!==0){            var sportLevel = this.state.sportLevelButtons[index];            var sportLevelCode = index;            this.setState({coach:Object.assign(this.state.coach,{sportLevel:sportLevel,sportLevelCode:sportLevelCode})});        }    }    //选教练星级类型    _handlePress4(index) {        if(index!==0){            var coachLevel = this.state.coachLevelButtons[index];            var coachLevelCode = index;            this.setState({coach:Object.assign(this.state.coach,{coachLevel:coachLevel,coachLevelCode:coachLevelCode})});        }    }    _renderPage(data,pageID){        return (            <View style={{width:width}}>                <Image                    source={data}                    style={{width:width,flex:3}}                    resizeMode={"stretch"}                />            </View>        );    }    render() {        //[{brief=null, feeDes=每人每次15元, address=世纪大道10600号, yardTotal=6, town=历城区, manager=3, city=济南市, latitude=36.693125,        // unitNum=U000001, remark=, province=山东省, phone=18254888887, name=山东体育学院羽毛球馆, unitId=1, attachId=null, longitude=117.200185},        const CANCEL_INDEX = 0;        const DESTRUCTIVE_INDEX = 1;        const genderCodeButtons=['取消','男','女'];        const sportLevelButtons=['取消', '无', '体育本科', '国家一级运动员', '国家二级运动员', '国家三级运动员'];        const coachLevelButtons=['取消','一星级教练', '二星级教练', '三星级教练', '四星级教练', '五星级教练'];        return (            <KeyboardAvoidingView style={{flex:1}} behavior="padding">                <Toolbar width={width} title='添加教练' navigator={this.props.navigator} actions={[{icon:ACTION_MAP,show:OPTION_SHOW}]}                         onPress={(i)=>{                         }}>                    {/*教练姓名*/}                    <ScrollView>                        <View style={{height:30,flexDirection:'row',justifyContent:'center',alignItems: 'center',backgroundColor:'#fff',margin:5}}>                            <View style={{flex:1}}>                                <Text>教练姓名：</Text>                            </View>                            <View style={{flex:3,flexDirection:'row',justifyContent:'flex-start',alignItems: 'center',backgroundColor:'#eee',                                borderRadius:10}}>                                <TextInputWrapper                                    placeholderTextColor='#888'                                    textInputStyle={{marginLeft:20,fontSize:13,color:'#222'}}                                    placeholder="请输入教练姓名"                                    val={this.state.coach.name}                                    onChangeText={                                        (value)=>{                                            this.setState({coach:Object.assign(this.state.coach,{name:value})})                                        }}                                    onCancel={                                        ()=>{this.setState({coach:Object.assign(this.state.coach,{name:null})});}                                    }                                />                            </View>                        </View>                        {/*性别*/}                        <View style={{height:30,flexDirection:'row',justifyContent:'center',alignItems: 'center',backgroundColor:'#fff',margin:5}}>                            <View style={{flex:1}}>                                <Text>*性别</Text>                            </View>                            <TouchableOpacity style={{flex:3,flexDirection:'row',justifyContent:'flex-start',alignItems: 'center',backgroundColor:'#eee',                                borderRadius:10}}                                              onPress={()=>{ this.show('actionSheet1'); }}>                                {                                    this.state.coach.genderCode==null?                                        <View style={{flex:3,marginLeft:20,justifyContent:'flex-start',alignItems: 'center',flexDirection:'row'}}>                                            <Text style={{color:'#888',fontSize:13}}>请选择性别</Text>                                        </View> :                                        <View style={{flex:3,marginLeft:20,justifyContent:'flex-start',alignItems: 'center',flexDirection:'row'}}>                                            <Text style={{color:'#444',fontSize:13}}>{this.state.coach.genderCode}</Text>                                        </View>                                }                                <View style={{width:60,flexDirection:'row',justifyContent:'flex-end',alignItems: 'center',marginRight:10}}>                                    <Icon name={'angle-right'} size={30} color="#888"/>                                </View>                                <ActionSheet                                    ref={(p) => {                                        this.actionSheet1 =p;                                    }}                                    title="请选择性别"                                    options={genderCodeButtons}                                    cancelButtonIndex={CANCEL_INDEX}                                    destructiveButtonIndex={DESTRUCTIVE_INDEX}                                    onPress={                                        (data)=>{ this._handlePress1(data); }                                    }                                />                            </TouchableOpacity>                        </View>                        {/*出生日期*/}                        <View style={{height:30,flexDirection:'row',justifyContent:'center',alignItems: 'center',backgroundColor:'#fff',margin:5}}>                            <View style={{flex:1}}>                                <Text>*出生日期</Text>                            </View>                            <View style={{flex:3,flexDirection:'row',justifyContent:'flex-start',alignItems: 'center',backgroundColor:'#eee',                                borderRadius:10}}>                                {                                    this.state.coach.birthday&&this.state.coach.birthday!=''?                                        <View style={{flex:3,marginLeft:20,justifyContent:'flex-start',alignItems: 'center',flexDirection:'row'}}>                                            <Text style={{color:'#444',fontSize:13}}>                                                {this.state.coach.birthday}                                            </Text></View>:                                        <View style={{flex:3,marginLeft:20,justifyContent:'flex-start',alignItems: 'center',flexDirection:'row'}}>                                            <Text style={{color:'#888',fontSize:13}}>                                                请选择出生日期                                            </Text></View>                                }                                <View style={{height:35,marginRight:15,flexDirection:'row',alignItems:'center'}}>                                    <DatePicker                                        style={{width:60,marginLeft:0,borderWidth:0}}                                        customStyles={{                                            placeholderText:{color:'transparent',fontSize:12},                                            dateInput:{height:30,borderWidth:0},                                            dateTouchBody:{marginRight:0,height:25,borderWidth:0},                                        }}                                        mode="date"                                        placeholder="选择"                                        format="YYYY-MM-DD"                                        minDate={"1957-00-00"}                                        confirmBtnText="确认"                                        cancelBtnText="取消"                                        showIcon={true}                                        iconComponent={<Icon name={'calendar'} size={20} color="#888"/>}                                        onDateChange={(date) => {                                            this.setState({coach:Object.assign(this.state.coach,{birthday:date})})                                        }}                                    />                                </View>                            </View>                        </View>                        {/*联系方式*/}                        <View style={{height:30,flexDirection:'row',justifyContent:'center',alignItems: 'center',backgroundColor:'#fff',margin:5}}>                            <View style={{flex:1}}>                                <Text>联系方式：</Text>                            </View>                            <View style={{flex:3,flexDirection:'row',justifyContent:'flex-start',alignItems: 'center',backgroundColor:'#eee',                                borderRadius:10}}>                                <TextInputWrapper                                    placeholderTextColor='#888'                                    textInputStyle={{marginLeft:20,fontSize:13,color:'#222'}}                                    placeholder="请输入教练联系方式"                                    val={this.state.coach.mobilePhone}                                    onChangeText={                                        (value)=>{                                            this.setState({coach:Object.assign(this.state.coach,{mobilePhone:value})})                                        }}                                    onCancel={                                        ()=>{this.setState({coach:Object.assign(this.state.coach,{mobilePhone:null})});}                                    }                                />                            </View>                        </View>                        {/*教练资质*/}                        <View style={{height:30,flexDirection:'row',justifyContent:'center',alignItems: 'center',backgroundColor:'#fff',margin:5}}>                            <View style={{flex:1}}>                                <Text>*教练资质</Text>                            </View>                            <TouchableOpacity style={{flex:3,flexDirection:'row',justifyContent:'flex-start',alignItems: 'center',backgroundColor:'#eee',                                borderRadius:10}}                                              onPress={()=>{ this.show('actionSheet3'); }}>                                {                                    this.state.coach.sportLevel==null?                                        <View style={{flex:3,marginLeft:20,justifyContent:'flex-start',alignItems: 'center',flexDirection:'row'}}>                                            <Text style={{color:'#888',fontSize:13}}>请选择教练资质</Text>                                        </View> :                                        <View style={{flex:3,marginLeft:20,justifyContent:'flex-start',alignItems: 'center',flexDirection:'row'}}>                                            <Text style={{color:'#444',fontSize:13}}>{this.state.coach.sportLevel}</Text>                                        </View>                                }                                <View style={{width:60,flexDirection:'row',justifyContent:'flex-end',alignItems: 'center',marginRight:10}}>                                    <Icon name={'angle-right'} size={30} color="#888"/>                                </View>                                <ActionSheet                                    ref={(p) => {                                        this.actionSheet3 =p;                                    }}                                    title="请选择教练资质"                                    options={sportLevelButtons}                                    cancelButtonIndex={CANCEL_INDEX}                                    destructiveButtonIndex={DESTRUCTIVE_INDEX}                                    onPress={                                        (data)=>{ this._handlePress3(data); }                                    }                                />                            </TouchableOpacity>                        </View>                        {/*教练星级*/}                        <View style={{height:30,flexDirection:'row',justifyContent:'center',alignItems: 'center',backgroundColor:'#fff',margin:5}}>                            <View style={{flex:1}}>                                <Text>*教练星级</Text>                            </View>                            <TouchableOpacity style={{flex:3,flexDirection:'row',justifyContent:'flex-start',alignItems: 'center',backgroundColor:'#eee',                                borderRadius:10}}                                              onPress={()=>{ this.show('actionSheet4'); }}>                                {                                    this.state.coach.coachLevel==null?                                        <View style={{flex:3,marginLeft:20,justifyContent:'flex-start',alignItems: 'center',flexDirection:'row'}}>                                            <Text style={{color:'#888',fontSize:13}}>请选择教练星级</Text>                                        </View> :                                        <View style={{flex:3,marginLeft:20,justifyContent:'flex-start',alignItems: 'center',flexDirection:'row'}}>                                            <Text style={{color:'#444',fontSize:13}}>{this.state.coach.coachLevel}</Text>                                        </View>                                }                                <View style={{width:60,flexDirection:'row',justifyContent:'flex-end',alignItems: 'center',marginRight:10}}>                                    <Icon name={'angle-right'} size={30} color="#888"/>                                </View>                                <ActionSheet                                    ref={(p) => {                                        this.actionSheet4 =p;                                    }}                                    title="请选择教练星级"                                    options={coachLevelButtons}                                    cancelButtonIndex={CANCEL_INDEX}                                    destructiveButtonIndex={DESTRUCTIVE_INDEX}                                    onPress={                                        (data)=>{ this._handlePress4(data); }                                    }                                />                            </TouchableOpacity>                        </View>                        {/*身高体重*/}                        <View style={{height:30,flexDirection:'row',justifyContent:'center',alignItems: 'center',backgroundColor:'#fff',margin:5}}>                            <View style={{flex:1}}>                                <Text>*身高体重</Text>                            </View>                            <View style={{flex:3,flexDirection:'row',justifyContent:'flex-start',alignItems: 'center',backgroundColor:'#eee',                                borderRadius:10}}>                                <TextInputWrapper                                    placeholderTextColor='#888'                                    textInputStyle={{marginLeft:20,fontSize:13,color:'#222'}}                                    placeholder="请输入身高/体重"                                    val={this.state.coach.heightweight}                                    onChangeText={                                        (value)=>{                                            this.setState({coach:Object.assign(this.state.coach,{heightweight:value})})                                        }}                                    onCancel={                                        ()=>{this.setState({coach:Object.assign(this.state.coach,{heightweight:null})});}                                    }                                />                            </View>                        </View>                        {/*服务城市*/}                        <View style={{height:30,flexDirection:'row',justifyContent:'center',alignItems: 'center',backgroundColor:'#fff',margin:5}}>                            <View style={{flex:1}}>                                <Text>服务城市</Text>                            </View>                            <View style={{flex:3,flexDirection:'row',justifyContent:'flex-start',alignItems: 'center',backgroundColor:'#eee',                                borderRadius:10}}>                                <TextInputWrapper                                    placeholderTextColor='#888'                                    textInputStyle={{marginLeft:20,fontSize:13,color:'#222'}}                                    placeholder="请输入服务城市"                                    val={this.state.coach.workcity}                                    onChangeText={                                        (value)=>{                                            this.setState({coach:Object.assign(this.state.coach,{workcity:value})})                                        }}                                    onCancel={                                        ()=>{this.setState({coach:Object.assign(this.state.coach,{workcity:null})});}                                    }                                />                            </View>                        </View>                        {/*毕业院校*/}                        <View style={{height:30,flexDirection:'row',justifyContent:'center',alignItems: 'center',backgroundColor:'#fff',margin:5}}>                            <View style={{flex:1}}>                                <Text>毕业院校</Text>                            </View>                            <View style={{flex:3,flexDirection:'row',justifyContent:'flex-start',alignItems: 'center',backgroundColor:'#eee',                                borderRadius:10}}>                                <TextInputWrapper                                    placeholderTextColor='#888'                                    textInputStyle={{marginLeft:20,fontSize:13,color:'#222'}}                                    placeholder="请输入毕业院校"                                    val={this.state.coach.graduate}                                    onChangeText={                                        (value)=>{                                            this.setState({coach:Object.assign(this.state.coach,{graduate:value})})                                        }}                                    onCancel={                                        ()=>{this.setState({coach:Object.assign(this.state.coach,{graduate:null})});}                                    }                                />                            </View>                        </View>                        <View style={{flexDirection:'row',height:50,justifyContent:'center',alignItems:'center',width:width,backgroundColor:'#fff',marginBottom:20}}>                            <TouchableOpacity style={{width:width*1/3,backgroundColor:'#fc6254',padding:10,flexDirection:'row',                                justifyContent:'center'}}                                              onPress={()=>{                                                  this.props.dispatch(addCoach(this.state.coach)).then((json)=>{                                                      if(json.re==1){                                                          alert('添加成功');                                                          this.goBack();                                                      }else{                                                          if(json.re==-100){                                                              this.props.dispatch(getAccessToken(false));                                                          }                                                      }                                                  });                                              }}>                                <Text style={{color:'#fff',fontSize:15}}>添加</Text>                            </TouchableOpacity>                        </View>                    </ScrollView>                </Toolbar>            </KeyboardAvoidingView>        );    }}var styles = StyleSheet.create({    container:{        flex:1,        flexDirection:'column'    },    popoverContent: {        width: 100,        height: 20,        justifyContent: 'center',        alignItems: 'center',    },    popoverText: {        color: '#ccc',        fontSize:14    }});module.exports = connect(state=>({        accessToken:state.user.accessToken,        personInfo:state.user.personInfo,        coaches:state.coach.coaches,    }))(AddCoach);